name: Ops Bot – Apply Patch from Issue Comment

on:
  issue_comment:
    types: [created]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  apply-patch:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract patch from comment
        id: extract
        uses: actions/github-script@v7
        with:
          script: |
            const body = (context.payload.comment && context.payload.comment.body) || '';
            // Нужно и триггер-слово, и код-блок с патчем
            if (!body.includes('/apply-patch')) {
              core.setFailed('Нет триггера /apply-patch в комментарии.');
              return;
            }
            const match = body.match(/```(patch|diff)\n([\s\S]*?)```/i);
            if (!match) {
              core.setFailed('Не найден код-блок ```patch```/```diff``` в комментарии.');
              return;
            }
            const fs = require('fs');
            fs.writeFileSync('incoming.patch', match[2], 'utf8');
            core.setOutput('has_patch', 'true');

      - name: Show patch (debug)
        if: steps.extract.outputs.has_patch == 'true'
        run: |
          echo "------ PATCH START ------"
          sed -n '1,200p' incoming.patch
          echo "------ PATCH END --------"

      - name: Configure git author
        if: steps.extract.outputs.has_patch == 'true'
        run: |
          git config user.name  "ops-bot"
          git config user.email "ops-bot@users.noreply.github.com"

      - name: Create work branch
        if: steps.extract.outputs.has_patch == 'true'
        run: |
          BRANCH="ops/patch-${{ github.run_id }}"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          git checkout -b "$BRANCH"

      - name: Apply patch
        if: steps.extract.outputs.has_patch == 'true'
        id: apply
        run: |
          set -e
          git apply --whitespace=fix --reject incoming.patch || {
            echo "::error::Патч применился с конфликтами."
            exit 2
          }

      - name: Commit & push
        if: steps.extract.outputs.has_patch == 'true'
        run: |
          git add -A
          git commit -m "Apply patch via Ops Bot (#${{ github.event.issue && github.event.issue.number || 'manual' }})"
          git push -u origin "$BRANCH"

      - name: Open Pull Request
        if: steps.extract.outputs.has_patch == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const branch = process.env.BRANCH;
            const { data: pr } = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: branch,
              base: 'main',
              title: 'Ops Bot: apply patch',
              body: 'Автогенерация PR из комментария с патчем.'
            });
            core.info(`PR: ${pr.html_url}`)
